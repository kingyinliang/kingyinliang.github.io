(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{270:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"分支策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 分支策略")]),t._v(" "),s("h4",{attrs:{id:"开发环境的区别，我们如何称呼"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发环境的区别，我们如何称呼","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发环境的区别，我们如何称呼")]),t._v(" "),s("ul",[s("li",[t._v("dev: 开发中使用的环境，可用来进行联调和自测")]),t._v(" "),s("li",[t._v("site: 前后端联调 / 自测完成，给到测试人员测试的环境")]),t._v(" "),s("li",[t._v("uat: 测试人员功能测试通过，在此环境使用模拟正式数据测试")]),t._v(" "),s("li",[t._v("test: 测试人员对功能进行测试，包含 site & test 行为")]),t._v(" "),s("li",[t._v("prd: 预生产 / 灰度测试，数据和环境完全和正式环境一样，用户看不到的生产环境")])]),t._v(" "),s("h4",{attrs:{id:"开发者开发拉分支流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发者开发拉分支流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发者开发拉分支流程")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("分支名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("步骤")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("自动部署")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("release")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("预发布分支 - 测试版本(test)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("无法 Push , 需透过 GitLab 上的 merge request 功能。  修复紧急 bug 时，允许 Push 方式")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.接到 merge request 时，资深工程师负责进行 peer review (需要提交 merge request 时指定一位 peer review 人员)。2.peer review 通过后，认同提交3.若为修复 bug，直接 Push")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.MR 通过，部属预发布或测试机器.2.紧急修复 bug 时，Push 后，部属预发布或测试机器")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.完成阶段性功能时，从 develop 分支拉出 release 分支，供上线前测试2.预发布环境，同正式机器，亦可当成测试机")])]),t._v(" "),s("tr",[s("td",[t._v("master")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("主分支 - 生产正式版本(prd)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1. 无法 Push , 需透过 GitLab 上的 merge request 功能")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1. merge request 时，需进行code review (技术 leader )2.code review 审核通过后，同意 merge request 提交（由 PM 同意，表示负责）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("MR 通过，部属正式线上机器")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("拉其他分之前，在 master 建立完整的环境")])]),t._v(" "),s("tr",[s("td",[t._v("hotfix-*")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("修复 master (线上)或 release (测试)发现之 bug")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("安装 lint-staged ＆ husky 插件，本地提交时会对 code 进行静态扫描。不通过则无法提交")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.发现 bug ，从 master 或 release 拉出分支，命名 hotfix-* (* 为 bug 提交系统上的 bug 号)2.修复后，直接 Push 至 release 分支3.测试人员确认无误，采 GitLab 上的 merge request 合并至 master 分支，自动部属至线上4.打上 tag5.Cherry Pick 到 develop 分支6.删除该 hotfix-*")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.Push 至 release 分支时，会自动部属至测试机2.MR 通过后，自动部署线上")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.修复后，合并后删除2.原则上一个 bug 建一次分支一次 push")])]),t._v(" "),s("tr",[s("td",[t._v("develop-*")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("功能开发所进行分支")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1. 安装 lint-staged ＆ husky 插件，本地提交时会对 code 进行静态扫描。不通过则无法提交。2.不需 Push 至 Gitlab，本地开发")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.从 develop 分支上拉出 develop-"),s("em",[t._v("。2.开发完成后，自检程式码。3.无误后合并进 develop 分支。4.功能验证无误后，删除 develop-")]),t._v(" 分支")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("1.一个模块功能一个分支。2.功能分支在合并确认无误后删除")])]),t._v(" "),s("tr",[s("td",[t._v("develop")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("常驻开发主分支(dev)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Push 至 develop 分支，会跑单元测试或 BDD 测试，覆盖率未达标时，无法推至 develop")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("若为第三方合作项目，需在 Push 到 Gitlab 时进行 peer review，确保上 GitLab 的 code 是正确的")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Push 至 develop 时，自动部属开发机(dev)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("h4",{attrs:{id:"拉分支流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉分支流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 拉分支流程")]),t._v(" "),s("ol",[s("li",[t._v("初始仅 master 主分支，建置初始环境。( sprint 0 )")]),t._v(" "),s("li",[t._v("进入开发时，从 master 主分支拉出 develop 分支 ( sprint 1 )")]),t._v(" "),s("li",[t._v("开发者从 develop 分支再拉出功能分支 (develop-*)")]),t._v(" "),s("li",[t._v("开发者在本地端编辑器安装 ESLint 插件 协助开发时自检程式码是否合乎规范")]),t._v(" "),s("li",[t._v("开发者本地 commit 时，因安装 lint-staged ＆ husky 插件，所以每次 commit 推至 GitLab 时，皆会进行语法错误自检")]),t._v(" "),s("li",[t._v("开发者将程式码推到 GitLab 时会与 develop 分支做预合并(透过 gitlab 上的 smart merge 功能)，检查该开发分支、同期其他开发者分支 (develop-*) 与 develop 分支的冲突，确保提交到 gitlab 是无冲突的，有冲突会即时 mail 反馈")]),t._v(" "),s("li",[t._v("每个 sprint 完成该功能后，功能分支(develop-*)合并进 develop ，")]),t._v(" "),s("li",[t._v("Push 至 develop 分支时，会进行覆盖率检测，答标后，自动发布到内网开发环境，预定的检查者也会对功能进行 peer review 。")]),t._v(" "),s("li",[t._v("功能无误后，开发删除该功能分支")]),t._v(" "),s("li",[t._v("从步骤 2 开始新的循环，直到阶段性功能开发完成")]),t._v(" "),s("li",[t._v("从当前 master 分支拉出 release 分支，在 Gitlab develop 分支上对 release 分支发 merge request 请求，同意后自动部属测试机")]),t._v(" "),s("li",[t._v("供测试人员进行 QA ，若有 bug，从当前 release 分支拉出 hotfix-* 分支进行修正，修正完后直接并入release 分支且 cherry pick 进 develop 分支，删除 hotfix-* 分支")]),t._v(" "),s("li",[t._v("测试人员对 release 分支版本确认无误后，从 gitlab 上发 merge request，由 owner 进行审核，无误后并入 Master  ，并打上 tag，同时删除 release 分支。此时部属至正式环境")]),t._v(" "),s("li",[t._v("阶段性开发结束后,删除 develop 分支，届时仅存 Master 主分支。")]),t._v(" "),s("li",[t._v("若线上发现 bug，从 master 拉出 hotfix-* 分支进行修正，(此时会手动部属至测试环境供测试人员确认)，无误后并入 master 分支并删除该  hotfix-* 分支，打上 tag")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("ol",[s("li",[t._v("分支命名支援小写字母、数字、连字符、下滑线等四种")]),t._v(" "),s("li",[t._v("新功能开发请从 develop 拉取分支，命名为 develop- + 功能模块英文名称")]),t._v(" "),s("li",[t._v("release 分支为 develop 分支达到该 sprint 里可交付版本时拉出的分支，供预发布用，预发布结束以后，必须合并进 develop 和 master 分支。")]),t._v(" "),s("li",[t._v("hotfix 分支为 master 分支(线上)或 release 分支出现问题时，拉出分支修改后并回。 命名为 hotfix- + #+bug 标号")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("develop"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("login\nhotfix"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("预发布期间，develop ＆ develop-* 分支持续开发，release 分支发现问题时，直接拉 hotfix-* 分支修复，，若判断为重大 bug ，需要记录以供日后追踪，修复后 ，在 GitLab 上发 merge request 并入 master 或 release 分支")]),t._v(" "),s("h4",{attrs:{id:"打-tag-的规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打-tag-的规则","aria-hidden":"true"}},[t._v("#")]),t._v(" 打 Tag 的规则")]),t._v(" "),s("ol",[s("li",[t._v("三个数字且以 . 为分隔构成，由 0.0.1 开始")]),t._v(" "),s("li",[t._v("每次打上 Tag 需加入发布说明")]),t._v(" "),s("li",[t._v("三位数字代表意义分别为大版本迭代 . 一般迭代 . bug 修复或补丁")]),t._v(" "),s("li",[t._v("第一个为主版本号,第二个为子版本号,第三个为阶段版本号"),s("br"),t._v("\n主版本号(1)：当功能模块有较大的变动，比如增加多个模块或者整体架构发生变化。此版本号由项目决定是否修改。"),s("br"),t._v("\n子版本号(1)：当功能有一定的增加或变化，比如增加了对权限控制、增加自定义视图等功能。此版本号由项目决定是否修改"),s("br"),t._v("\n阶段版本号(1)：一般是 Bug 修复或是一些小的变动，要经常发布修订版，时间间隔不限，修复一个严重的bug即可发布一个修订版。")]),t._v(" "),s("li",[t._v("版本+1 时，后面若有其他数字则归零，如 v1.20.3 => v2.0.0 , v4.5.6 => v4.6.0")]),t._v(" "),s("li",[t._v("如果线上发布的版本（例如 v1.0）发现 Bug，需要修复，那么基于之前的 Tag 创建一个分支（例如 hotfix-v1.0-xxx）出去，在分支上修复，然后提交 PR，代码审查和自动化测试通过后，从分支上创建一个新的 Tag （例如 v1.0.1）")]),t._v(" "),s("li",[t._v("经常性打补丁，可以创建一个发布版本的分支，例如 release-v1.0，每次打补丁，都直接从发布分支 release-v1.0 而不是 master 创建新的分支（例如 hotfix-release-v1.0-xxx），修复后提交 PR，代码审查和自动化测试通过后，合并回分支 release-v1.0，然后基于 release-v1.0 分支发布补丁。")])]),t._v(" "),s("h2",{attrs:{id:"提交规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交规范")]),t._v(" "),s("p",[s("img",{attrs:{src:"/standard/GIT/GIT1.jpg",alt:"GIT.png",title:"GIT"}})]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("Commit message 包括 Header，Body 和 Footer 三个部分。\nHeader 是必需的，Body 和 Footer 可以省略。")])]),t._v(" "),s("h4",{attrs:{id:"commit-message-格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-格式","aria-hidden":"true"}},[t._v("#")]),t._v(" Commit message 格式")]),t._v(" "),s("h5",{attrs:{id:"header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#header","aria-hidden":"true"}},[t._v("#")]),t._v(" Header")]),t._v(" "),s("p",[t._v("Header 部分只有一行，包括三个字段：type（必需）、scope（可选）和 subject（必需）。"),s("br"),t._v("\n格式")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 修正页面 name 变数字串首字母大写问题。\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type 字串皆小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// () 和 : 皆为半角")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// : 后面与 subject 有一个半角空格")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h5",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type","aria-hidden":"true"}},[t._v("#")]),t._v(" type")]),t._v(" "),s("ul",[s("li",[t._v("feat: 新功能（feature）")]),t._v(" "),s("li",[t._v("fix: 修补 bug")]),t._v(" "),s("li",[t._v("docs: 文档（documentation）新增文件")]),t._v(" "),s("li",[t._v("style: 格式样式（不影响代码运行的变动）")]),t._v(" "),s("li",[t._v("refactor: 重构（即不是新增功能，也不是修改 bug 的代码变动）")]),t._v(" "),s("li",[t._v("test: 增加测试")]),t._v(" "),s("li",[t._v("chore: 构建过程或辅助工具的变动")]),t._v(" "),s("li",[t._v("modify: 程式码的调整")]),t._v(" "),s("li",[t._v("revert: 撤销以前的 commit (后面跟着被撤销 Commit 的 Header)")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("revert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("feat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pencil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'graphiteWidth'")]),t._v(" option\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("完整格式")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("空行"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("空行"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("footer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("范例")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 范例1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 修改灯区块显示文字部分\n \n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 范例2")]),t._v("\nfix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 修正 jenkinsfile 内容多馀字串导致集成执行错误问题\n \n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 范例3 加入 body")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 登入页面样式\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("空行"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n登入页面异动下面两个样式\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 登入按钮样式\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 帐和输入区块延长至 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" px\n \n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 范例4 加入 body footer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("login"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 修正登入区块帐号可输入特殊符号问题\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("空行"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n登入区块帐号输入滤掉特殊符号\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("空行"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nClose #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9654")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("h5",{attrs:{id:"特殊情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊情况","aria-hidden":"true"}},[t._v("#")]),t._v(" 特殊情况")]),t._v(" "),s("p",[t._v("Revert")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("revert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("feat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pencil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'graphiteWidth'")]),t._v(" option\nThis reverts commit "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("667")]),t._v("ecc1654a317a13331b17617d973392f415f02"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit","aria-hidden":"true"}},[t._v("#")]),t._v(" commit")]),t._v(" "),s("h4",{attrs:{id:"commitizen-替代你的-git-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitizen-替代你的-git-commit","aria-hidden":"true"}},[t._v("#")]),t._v(" Commitizen: 替代你的 git commit")]),t._v(" "),s("h5",{attrs:{id:"全局安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局安装")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('npm install -g commitizen cz-conventional-changelog\necho\'{ "path": "cz-conventional-changelog" }\' > ~/.czrc\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("主要, 全局模式下, 需要 ~/.czrc 配置文件, 为 commitizen 指定 Adapter.")]),t._v(" "),s("h5",{attrs:{id:"项目级安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目级安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目级安装")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install -D commitizen cz-conventional-changelog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("package.json中配置:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-cz"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitizen"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules/cz-conventional-changelog"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果全局安装过 commitizen, 那么在对应的项目中执行 git cz or npm run commit 都可以.")]),t._v(" "),s("h4",{attrs:{id:"commitlint-校验你的-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitlint-校验你的-message","aria-hidden":"true"}},[t._v("#")]),t._v(" Commitlint: 校验你的 message")]),t._v(" "),s("p",[t._v("commitlint: 可以帮助我们 lint commit messages, 如果我们提交的不符合指向的规范, 直接拒绝提交, 比较狠."),s("br"),t._v("\n同样的, 它也需要一份校验的配置, 这里推荐 @commitlint/config-conventional (符合 Angular团队规范)."),s("br"),t._v("\n安装:")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm i -D @commitlint/config-conventional @commitlint/cli\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("同时需要在项目目录下创建配置文件 .commitlintrc.js, 写入:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@commitlint/config-conventional'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"结合-husky"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结合-husky","aria-hidden":"true"}},[t._v("#")]),t._v(" 结合 Husky")]),t._v(" "),s("p",[t._v("校验 commit message 的最佳方式是结合 git hook, 所以需要配合 Husky.")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm i husky\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("package.json 中添加:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -e $GIT_PARAMS"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"standard-version-自动生成-changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#standard-version-自动生成-changelog","aria-hidden":"true"}},[t._v("#")]),t._v(" standard-version: 自动生成 CHANGELOG")]),t._v(" "),s("p",[t._v("通过以上工具的帮助, 我们的工程 commit message 应该是符合 Angular团队那套, 这样也便于我们借助 standard-version 这样的工具, 自动生成 CHANGELOG, 甚至是 语义化的版本号(Semantic Version).")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm i -S standard-version\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("package.json 配置:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scirpt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"release"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard-version"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"gitlab-merge-requests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-merge-requests","aria-hidden":"true"}},[t._v("#")]),t._v(" GitLab Merge Requests")]),t._v(" "),s("p",[t._v("Merge Request（MR，合并请求）是作为编码协作及版本控制平台的 GitLab 的基础功能。就和它的命名一样：是一个将一个分支合并到另一个分支上的请求"),s("br"),t._v("\n当完成 develop-* 分支的开发，并进行了自测，想要向主干分支 develop 合并时，通过登录 GitLab 提出 MR。")]),t._v(" "),s("h4",{attrs:{id:"peer-review"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#peer-review","aria-hidden":"true"}},[t._v("#")]),t._v(" Peer Review")]),t._v(" "),s("p",[t._v("开发的前两次 sprint 由欣和方进行 peer peview ，开发流程成熟后，未来由第三方每个开发指定另一位开发进行 peer peview，同时为避免因频繁进行 peer peview 而降低开发效率，现阶段仅在 develop-* 分支合并 develop 分支时进行 MR ，在 release 分支进行 bug 修复以及 develop 分支上进行非常小粒度的开发时不需要提 MR，重要功能一定要提 MR。"),s("br"),t._v("\nReview 内容涉及编码规范（命名、注释、文件目录组织结构等）及最佳实践，在编码规范及需要小范围改动的最佳实践修复后进行分支的实际合并。对于改动较大且影响范围较低的代码，可以安排在 Debug 阶段或版本末期进行重构。\n提交格式")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("标题：develop-* 新合并请求\n描述：\n \ndevelop-* xxx 功能合并请求\n<空行>\n<实现功能点，改动了什么，解决了什么问题，需要代码审查的人留意那些影响比较大的改动。>\n1.\n2.\n3.\n4.\n \n指派给：欣和 code prview 负责人或既定开发者\n来源分支：develop-*\n目标分支：develop\n \n[]接受合并请求后删除来源分支。->暂时不勾选，开发手动删除\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("在创建 MR 时，Reviewers（审核人）一栏里主要填写“必需审核人”。只有这些人审核都通过，才允许合并。"),s("br"),t._v("\n选择审核人需留意，关注的视角不太一样。团队 Leader 关注你是否完成了任务，前后端架构师关注是否符合公司统一的架构、风格、质量，产品架构师从整个产品层面来关注这个 MR")])]),t._v(" "),s("h5",{attrs:{id:"进入-gitlab-页面，选择欲合并的项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进入-gitlab-页面，选择欲合并的项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 进入 gitlab 页面，选择欲合并的项目")]),t._v(" "),s("p",[s("img",{attrs:{src:"/standard/GIT/GIT2.jpg",alt:"GIT.png",title:"GIT"}})]),t._v(" "),s("h5",{attrs:{id:"在欲合并的分支点击右边-合并请求-按钮"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在欲合并的分支点击右边-合并请求-按钮","aria-hidden":"true"}},[t._v("#")]),t._v(" 在欲合并的分支点击右边 [合并请求] 按钮")]),t._v(" "),s("h5",{attrs:{id:"输入表单讯息-（描述-指派给-kingyinliang-目标分支）后送出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入表单讯息-（描述-指派给-kingyinliang-目标分支）后送出","aria-hidden":"true"}},[t._v("#")]),t._v(" 输入表单讯息 （描述,指派给 kingyinliang , 目标分支）后送出")]),t._v(" "),s("p",[s("img",{attrs:{src:"/standard/GIT/GIT3.jpg",alt:"GIT.png",title:"GIT"}})]),t._v(" "),s("h2",{attrs:{id:"git-工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-工作流","aria-hidden":"true"}},[t._v("#")]),t._v(" git 工作流")]),t._v(" "),s("h4",{attrs:{id:"git-三大特色，分支，暂存区，工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-三大特色，分支，暂存区，工作流","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 三大特色，分支，暂存区，工作流")]),t._v(" "),s("h4",{attrs:{id:"何谓工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何谓工作流","aria-hidden":"true"}},[t._v("#")]),t._v(" 何谓工作流")]),t._v(" "),s("p",[t._v("WorkFlow 的字面意思，工作流，即工作流程。因为有分支的存在，才构成了多工作流的特色。事实的确如此，因为项目开发中，多人协作，分支很多，虽然各自在分支上互不干扰，但是我们总归需要把分支合并到一起，而且真实项目中涉及到很多问题，例如版本迭代，版本发布，bug 修复等，为了更好的管理代码，需要制定一个工作流程，这就是我们说的工作流，也有人叫它分支管理策略。"),s("br"),t._v("\n工作流不涉及任何命令，因为它就是一个规则，完全由开发者自定义，并且自遵守，正所谓无规矩不成方圆，就是这个道理。")]),t._v(" "),s("h4",{attrs:{id:"常用工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用工作流","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用工作流")]),t._v(" "),s("p",[t._v("目前使用度最高的工作流前三名分别是以下三种：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://nvie.com/posts/a-successful-git-branching-model/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Flow"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://scottchacon.com/2011/08/31/github-flow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Flow"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.gitlab.com/ee/workflow/gitlab_flow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab Flow"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("其中 Git Flow 出现的最早，GitHub Flow 在 Git Flow 的基础上，做了一些优化，适用于持续版本的发布，而 GitLab Flow 出现的时间比较晚，所以综合前面两种工作流的优点，制定而成的一个工作流。")])]),t._v(" "),s("h2",{attrs:{id:"bug-缺陷-提交原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bug-缺陷-提交原则","aria-hidden":"true"}},[t._v("#")]),t._v(" bug(缺陷)提交原则")]),t._v(" "),s("p",[t._v("为什么我们要有 bug 提交原则，比如，当你发现了一个菜单栏上某个条目缺失的问题，在递交缺陷报告前，通常会去缺陷管理系统搜索一下是否已经有人递交过类似的缺陷。"),s("br"),t._v("\n所以，如果缺陷标题本身就能概括性地描述具体问题，你就可以通过阅读标题判断类似的缺陷是否被提交过，大大提高测试工程师提交缺陷报告的效率。\n最近在了解测试，刚好看到一些问题的提交原则，顺手整理一下讯息。JIRA 上已有递交 bug 的完善流程，这里也针对各信息提供细节说明。"),s("br"),t._v("\n具体描述”什么问题”，同时还必须清楚地表述发生问题时的上下文，也就是问题出现的场景。")]),t._v(" "),s("h3",{attrs:{id:"缺陷标题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺陷标题","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺陷标题")]),t._v(" "),s("ol",[s("li",[t._v("标题应该尽可能描述问题本质，而避免只停留在问题的表面。")]),t._v(" "),s("li",[t._v("比如，"),s("br"),t._v("\n“商品金额输入框，可以输入英文字母和其他字符” // bad"),s("br"),t._v("\n“商品金额输入框，没有对输入内容做校验” // nice")])]),t._v(" "),s("h3",{attrs:{id:"缺陷概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺陷概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺陷概述")]),t._v(" "),s("p",[t._v("缺陷概述的目的是，清晰简洁地描述缺陷，使开发工程师能够聚焦缺陷的本质。")]),t._v(" "),s("h3",{attrs:{id:"缺陷影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺陷影响","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺陷影响")]),t._v(" "),s("p",[t._v("缺陷影响描述的是，缺陷引起的问题对用户或者对业务的影响范围以及严重程度。"),s("br"),t._v("\n缺陷影响决定了缺陷的优先级（Priority）和严重程度（Severity），开发经理会以此为依据来决定修复该缺陷的优先级；而产品经理会以此为依据来衡量缺陷的严重程度，并决定是否要等该缺陷被修复后才能发布产品。"),s("br"),t._v("\n严重程度是缺陷本身的属性，通常确定后就不再变化，而优先级是缺陷的工程属性，会随着项目进度、解决缺陷的成本等因素而变动。")]),t._v(" "),s("ol",[s("li",[t._v("缺陷越严重，优先级就越高；")]),t._v(" "),s("li",[t._v("缺陷影响的范围越大，优先级也会越高；")]),t._v(" "),s("li",[t._v("有些缺陷虽然从用户影响角度来说不算严重，但是会妨碍测试或者是自动化测试的执行，这类缺陷属于典型的严重程度低，但是优先级高；")]),t._v(" "),s("li",[t._v("有些缺陷虽然严重程度比较高，但是考虑到修复成本以及技术难度，也会出现优先级较低的情况。")])]),t._v(" "),s("h4",{attrs:{id:"严重程度（severity）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#严重程度（severity）","aria-hidden":"true"}},[t._v("#")]),t._v(" 严重程度（Severity）")]),t._v(" "),s("ol",[s("li",[t._v("Blocker: 即系统无法执行、崩溃或严重资源不足、应用模块无法启动或异常退出、无法测试、造成系统不稳定。")])]),t._v(" "),s("ul",[s("li",[t._v("严重花屏")]),t._v(" "),s("li",[t._v("内存泄漏")]),t._v(" "),s("li",[t._v("用户数据丢失或破坏")]),t._v(" "),s("li",[t._v("系统崩溃/死机/冻结")]),t._v(" "),s("li",[t._v("模块无法启动或异常退出")]),t._v(" "),s("li",[t._v("严重的数值计算错误")]),t._v(" "),s("li",[t._v("功能设计与需求严重不符")]),t._v(" "),s("li",[t._v("其它导致无法测试的错误, 如服务器500错误")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Critical：即影响系统功能或操作，主要功能存在严重缺陷，但不会影响到系统稳定性。")])]),t._v(" "),s("ul",[s("li",[t._v("功能未实现")]),t._v(" "),s("li",[t._v("功能错误")]),t._v(" "),s("li",[t._v("系统刷新错误")]),t._v(" "),s("li",[t._v("数据通讯错误")]),t._v(" "),s("li",[t._v("轻微的数值计算错误")]),t._v(" "),s("li",[t._v("影响功能及界面的错误字或拼写错误")]),t._v(" "),s("li",[t._v("安全性问题")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Major：即界面、性能缺陷、兼容性。")])]),t._v(" "),s("ul",[s("li",[t._v("操作界面错误（包括数据窗口内列名定义、含义是否一致）")]),t._v(" "),s("li",[t._v("边界条件下错误")]),t._v(" "),s("li",[t._v("提示信息错误（包括未给出信息、信息提示错误等）")]),t._v(" "),s("li",[t._v("长时间操作无进度提示")]),t._v(" "),s("li",[t._v("系统未优化（性能问题）")]),t._v(" "),s("li",[t._v("光标跳转设置不好，鼠标（光标）定位错误")]),t._v(" "),s("li",[t._v("兼容性问题")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Minor/Trivial:即易用性及建议性问题。")])]),t._v(" "),s("ul",[s("li",[t._v("界面格式等不规范")]),t._v(" "),s("li",[t._v("辅助说明描述不清楚")]),t._v(" "),s("li",[t._v("操作时未给用户提示")]),t._v(" "),s("li",[t._v("可输入区域和只读区域没有明显的区分标志")]),t._v(" "),s("li",[t._v("个别不影响产品理解的错别字")]),t._v(" "),s("li",[t._v("文字排列不整齐等一些小问题")])]),t._v(" "),s("h4",{attrs:{id:"缺陷的优先级（priority）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺陷的优先级（priority）","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺陷的优先级（Priority）")]),t._v(" "),s("ol",[s("li",[t._v("P0- Immediate"),s("br"),t._v("\n即“马上解决”，表示问题必须马上解决，否则系统根本无法达到预定的需求。")]),t._v(" "),s("li",[t._v("P1- Urgent"),s("br"),t._v("\n即“急需解决”，表示问题的修复很紧要，很急迫，关系到系统的主要功能模块能否正常。")]),t._v(" "),s("li",[t._v("P2- High"),s("br"),t._v("\n即“高度重视”，表示有时间就要马上解决，否则系统偏离需求较大或预定功能不能正常实现。")]),t._v(" "),s("li",[t._v("P3- Normal"),s("br"),t._v("\n即“正常处理”，进入个人计划解决，表示问题不影响需求的实现，但是影响其他使用方面，比如页面调用出错，调用了错误的等。")]),t._v(" "),s("li",[t._v("P4- Low"),s("br"),t._v("\n即”低优先级”，即问题在系统发布以前必须确认解决或确认可以不予解决。")])]),t._v(" "),s("h4",{attrs:{id:"环境配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 环境配置")]),t._v(" "),s("p",[t._v("重现缺陷的环境配置细节。")]),t._v(" "),s("h4",{attrs:{id:"前置条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前置条件","aria-hidden":"true"}},[t._v("#")]),t._v(" 前置条件")]),t._v(" "),s("p",[t._v("测试步骤开始前系统应该处在的状态，其目的是减少缺陷重现步骤的描述。"),s("br"),t._v("\n比如，某个业务操作需要先完成用户登录，你在缺陷重现步骤里就没有必要描述登录操作的步骤细节，可以直接使用 “前置条件：用户已完成登录”的描述方式；")]),t._v(" "),s("h4",{attrs:{id:"缺陷重现步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺陷重现步骤","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺陷重现步骤")]),t._v(" "),s("p",[t._v("缺陷重现步骤是整个缺陷报告中最核心的内容，通常是从用户角度出发来描述，每个步骤都应该是可操作并且是连贯的，其目的在于用简洁向开发工程师展示缺陷重现的具体操作步骤。")]),t._v(" "),s("h4",{attrs:{id:"期望结果和实际结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#期望结果和实际结果","aria-hidden":"true"}},[t._v("#")]),t._v(" 期望结果和实际结果")]),t._v(" "),s("p",[t._v("期待结果来自于对需求的理解，而实际结果来自于测试执行的结果。需要说明应该发生什么，而不是什么不应该发生。")]),t._v(" "),s("h4",{attrs:{id:"变通方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变通方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 变通方案")]),t._v(" "),s("p",[t._v("提供一种临时绕开当前缺陷而不影响产品功能的方式，通常由测试工程师或者开发工程师完成，或者他们一同决定。变通方案和优先级相关。")]),t._v(" "),s("h4",{attrs:{id:"根原因分析（root-cause-analysis）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#根原因分析（root-cause-analysis）","aria-hidden":"true"}},[t._v("#")]),t._v(" 根原因分析（Root Cause Analysis）")]),t._v(" "),s("p",[t._v("RCA，在发现缺陷的同时，定位出问题的根本原因，清楚地描述缺陷产生的原因并反馈给开发工程师，提升修复效率。")]),t._v(" "),s("h4",{attrs:{id:"附件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附件","aria-hidden":"true"}},[t._v("#")]),t._v(" 附件")]),t._v(" "),s("p",[t._v("界面截图、测试用例日志、服务器端日志、GUI 测试的执行视频等证据支持。")]),t._v(" "),s("h4",{attrs:{id:"范例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范例","aria-hidden":"true"}},[t._v("#")]),t._v(" 范例")]),t._v(" "),s("p",[t._v("(待补)")])])},[],!1,null,null,null);a.default=r.exports}}]);